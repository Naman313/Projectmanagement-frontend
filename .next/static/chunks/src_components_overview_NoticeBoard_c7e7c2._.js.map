{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/G/BlackCoffer/projects/next-project-management/src/components/overview/NoticeBoard/NoticeBoardModal.tsx"],"sourcesContent":["import React, {\r\n  useState,\r\n  useMemo,\r\n  Dispatch,\r\n  SetStateAction,\r\n  useEffect,\r\n\r\n} from \"react\";\r\nimport Image from \"next/image\";\r\nimport avatar from '../../../../public/assets/avtar.jpg'\r\nimport {\r\n  X,\r\n  Search,\r\n  ChevronDown,\r\n  Check\r\n} from \"lucide-react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"next/navigation\";\r\nimport { toast } from \"react-toastify\";\r\nimport Toast from \"@/components/auth/Toast\";\r\nimport TextareaBox from '../Textarea/TextareaBox';\r\n\r\ninterface TeamMember {\r\n  id: string;\r\n  name: string;\r\n  role: string;\r\n  avatar: string;\r\n}\r\n\r\ninterface AddToDoModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  messageOptions: string[];\r\n  setMessagesOptions: Dispatch<SetStateAction<string[]>>;\r\n  NoticeBoardData: any;   // warning for naman\r\n  setNoticeBoardData: Dispatch<SetStateAction<any>>;\r\n}\r\n\r\n// const teamMembers: TeamMember[] = [\r\n//   {\r\n//     id: \"1\",\r\n//     name: \"Naman\",\r\n//     role: \"Senior Project Manager\",\r\n//     avatar: \"/api/placeholder/32/32\",\r\n//   },\r\n//   {\r\n//     id: \"2\",\r\n//     name: \"Taarush\",\r\n//     role: \"UI/UX Designer\",\r\n//     avatar: \"/api/placeholder/32/32\",\r\n//   },\r\n//   {\r\n//     id: \"3\",\r\n//     name: \"Sansdesh\",\r\n//     role: \"Frontend Developer\",\r\n//     avatar: \"/api/placeholder/32/32\",\r\n//   },\r\n//   {\r\n//     id: \"4\",\r\n//     name: \"Prashant\",\r\n//     role: \"Frontend Developer\",\r\n//     avatar: \"/api/placeholder/32/32\",\r\n//   },\r\n//   {\r\n//     id: \"5\",\r\n//     name: \"Mr. anonymous\",\r\n//     role: \"UI/UX Designer\",\r\n//     avatar: \"/api/placeholder/32/32\",\r\n//   },\r\n// ];\r\n\r\nconst NoticeBoardModal = ({\r\n  isOpen,\r\n  onClose,\r\n  messageOptions,\r\n  setMessagesOptions,\r\n  NoticeBoardData,\r\n  setNoticeBoardData\r\n}: AddToDoModalProps) => {\r\n  const [selectedAssignee, setSelectedAssignee] = useState<TeamMember | null>(\r\n    null\r\n  );\r\n  const [teamMembers, setTeamMembers] = useState<TeamMember[]>([]);\r\n  const [notifyMembers, setNotifyMembers] = useState<TeamMember[]>(teamMembers);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [notes, setNotes] = useState(\"\");\r\n  const [select, setSelect] = useState(\"\");\r\n  const [drop, setDrop] = useState<boolean>(false);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const projectId = useParams().id;\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const fetchMembers = async () => {\r\n        const response = await axios.get(\r\n          `${process.env.NEXT_PUBLIC_API_URL}/projects/${projectId}/members`,\r\n          {\r\n            // params: { projectId },\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n        // console.log(response.data.members);\r\n        // setNotifyMembers(response.data.members);\r\n        setTeamMembers(response.data.members);\r\n        setNotifyMembers(response.data.members);\r\n      };\r\n\r\n      fetchMembers();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, []);\r\n\r\n  const filteredMembers = useMemo(() => {\r\n    console.log(teamMembers);\r\n    return teamMembers.filter((member) =>\r\n      member?.name?.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n  }, [searchTerm]);\r\n\r\n  const handleMemberClick = (member: TeamMember) => {\r\n    setSelectedAssignee(member);\r\n    if (!notifyMembers.some((m) => m.id === member.id)) {\r\n      setNotifyMembers([...notifyMembers, member]);\r\n    }\r\n    setSearchTerm(\"\");\r\n  };\r\n\r\n  const removeNotifyMember = (memberId: string) => {\r\n    setNotifyMembers(notifyMembers.filter((member) => member.id !== memberId));\r\n  };\r\n\r\n  const handleMessageOptionClick = (option: string) => {\r\n    setSelect(option);\r\n    setDrop(false);\r\n  };\r\n\r\n  const handleAddCategory = async (category: string) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.NEXT_PUBLIC_API_URL}/categories`,  // Replace with actual API URL\r\n        { category },  // Request body\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,  // Include token in Authorization header\r\n          },\r\n        }\r\n      );\r\n  \r\n      console.log(\"Category added successfully:\", response.data);\r\n      return response.data; // Return response for further use\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        console.error(\"Error adding category:\", error.response?.data || error.message);\r\n      } else {\r\n        console.error(\"Error adding category:\", error);\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    console.log(\"Title:\", title);\r\n    console.log(\r\n      \"Assigned To:\",\r\n      selectedAssignee ? selectedAssignee.name : \"No assignee selected\"\r\n    );\r\n    console.log(\r\n      \"Notify Members:\",\r\n      notifyMembers.map((member) => member.name)\r\n    );\r\n    console.log(\"Category:\", select);\r\n    console.log(\"Notes:\", notes);\r\n    \r\n    const formData = {\r\n      title,\r\n      description: notes, // Assuming `notes` is the description\r\n      category: select,\r\n      // notifyWhenPosted: selectedAssignee ? selectedAssignee.id : null,\r\n      notifyWhenPosted: notifyMembers.map((member) => member.id),\r\n    \r\n      // postedBy: userId, // Make sure to replace `userId` with the actual user ID\r\n      comments: [], // You can initialize comments if needed, or leave empty\r\n      project: projectId, // Replace with the actual project ID if needed\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.NEXT_PUBLIC_API_URL}/noticeboard`,\r\n        formData,\r\n        {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n        }\r\n      );\r\n      if (response.status === 201) {\r\n        toast.success(\"Noticeboard created successfully\");\r\n        console.log(\"Noticeboard created successfully:\", response);\r\n        setNoticeBoardData([...NoticeBoardData, response.data.noticeboard]);\r\n        setTimeout(() => {\r\n          onClose(); // Close the modal after successful creation\r\n        }, 3000);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to create project:\", error);\r\n    }\r\n  };\r\n  const [selectOption, setselectOption] = useState(\"null\");\r\n\r\n  const [isAddingCategory, setIsAddingCategory] = useState(false);\r\n  const [newCategory, setNewCategory] = useState(\"\");\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    // console.log(messageOptions),\r\n    (\r\n      <div className=\"fixed inset-0 bg-black overflow-y-auto no-scrollbar bg-opacity-25 flex items-center justify-center p-4 z-50 font-sans\">\r\n        <Toast/>\r\n        <div className=\"bg-white rounded-[10px] w-[1125px] ml-2  h-[580px] mt-[238px]  pl-[10px] \">\r\n          {/* Header */}\r\n          <div className=\"flex justify-between items-center py-2 px-3\">\r\n            <h2 className=\"text-[19px] font-medium text-[#333333] mt-2\">Add Notice Board Message</h2>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"p-1 hover:bg-gray-100 rounded-full\"\r\n            >\r\n              <X className=\"w-5 h-5\" />\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-2 gap-6 py-2 px-4\">\r\n            {/* Left Column */}\r\n            <div className=\"space-y-1\">\r\n              {/* To-Do Description */}\r\n              <div className=\"space-y-[1px] mb-4\">\r\n                <label className=\"text-[13.5px] font-regular text-[#333333]\">\r\n                  Message Title\r\n                </label>\r\n             \r\n                <input\r\n                  placeholder=\"Write title....\"\r\n                  className=\"w-full h-[60px] pl-2 pb-6 text-regular border border-[#CCCCCC]  text-[#333333] placeholder-[#B3B3B3] text-[13.5px] rounded-md\" \r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n               \r\n              </div>\r\n              {/* Category Select */}\r\n              <div className=\"relative pt-2\">\r\n                <label className=\"text-[13.5px] font-regular text-[#333333]\">\r\n                  Pick a category <span className=\"text-[#808080]\">(Optional)</span>\r\n                </label>\r\n                <div className=\"absolute w-full z-50 bg-white\">\r\n                  <div className=\"flex flex-row w-full\">\r\n                    <button\r\n                      className=\"flex flex-row w-full px-2 py-2 text-sm border border-[#CCCCCC]  rounded-md\r\n                       bg-white text-[#333333]\"\r\n                      onClick={() => setDrop((prev) => !prev)}\r\n                    >\r\n                      {select || \"None\"}\r\n                      <ChevronDown className=\"w-4 h-4 ml-auto text-[#808080]\" />\r\n                    </button>\r\n                  </div>\r\n                  {drop && (\r\n                    <div>\r\n                      {messageOptions.map((option) => (\r\n                        <div key={option}>\r\n                          <div\r\n                            className=\"px-4 py-2 text-sm hover:bg-[#565DBD] hover:text-[white] cursor-pointer\"\r\n                            onClick={() => handleMessageOptionClick(option)}\r\n                          >\r\n                            {option}\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                      <div>\r\n                        {/* Add categories button */}\r\n                        {!isAddingCategory && (\r\n                          <button\r\n                            className=\"px-4 text-[#5D56BD] cursor-pointer\"\r\n                            onClick={() => setIsAddingCategory(true)}\r\n                          >\r\n                            Add categories\r\n                          </button>\r\n                        )}\r\n\r\n                        {/* Input for adding a new category */}\r\n                        {isAddingCategory && (\r\n                          <div className=\"flex items-center  border text-white p-[2px] rounded-sm\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"px-4 py-2 border-gray-200 rounded-lg focus:outline-none text-[#333333]\"\r\n                              value={newCategory}\r\n                              onChange={(e) => setNewCategory(e.target.value)}\r\n                              placeholder=\"Enter new category\"\r\n                            />\r\n                            <button\r\n                              onClick={() => {\r\n                                if (newCategory.trim()) {\r\n                                  handleAddCategory(newCategory);\r\n                                  setMessagesOptions([\r\n                                    ...messageOptions,\r\n                                    newCategory,\r\n                                  ]);\r\n                                  setNewCategory(\"\"); // Reset input field\r\n                                  setIsAddingCategory(false); // Close input field\r\n                                }\r\n                              }}\r\n                              className=\"bg-[#6BBD56] text-white px-1 py-1 rounded-sm\r\n                               hover:bg-green-600 ml-auto\"\r\n                            >\r\n                              <Check />\r\n                            </button>\r\n                            <button\r\n                              onClick={() => {\r\n                                setNewCategory(\"\"); // Reset input field\r\n                                setIsAddingCategory(false); // Close input field\r\n                              }}\r\n                              className=\"bg-[#FF4c51] ml-2 px-1 py-1 text-white hover:bg-red-700\"\r\n                            >\r\n                              <X/>\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Notify Members */}\r\n              <div className=\"relative space-y-1\">\r\n                <div>\r\n                <label className=\"mt-[60px] block text-[13.5px] font-regular text-[#333333]\">\r\n                  When post, notify\r\n                </label>\r\n                <div className=\"mt-2\">\r\n                  <div className=\"absolute w-auto left-0 pl-3 flex mb-1 items-center pointer-events-none \">\r\n                    <Search className=\"mt-2.5 w-4 h-4 text-[#B3B3B3] \" />\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search team member\"\r\n                    className=\"w-full py-2 pl-10 border rounded-md text-[13.5px] placeholder-[#B3B3B3] border-[#CCCCCC]\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                  />\r\n                </div>\r\n                </div>\r\n                <div className=\"flex flex-wrap gap-2 mt-2 border border-[#CCCCCC] rounded-md h-[80px] translate-y-1\">\r\n                  {notifyMembers.map((member) =>(\r\n                    <div className=\"pt-1 pb-1 px-1\">\r\n                    <div\r\n                      key={member.id}\r\n                      className=\"flex items-center gap-1 bg-[#5D56BD] text-white px-1 ml-1  rounded-full font-regular text-[12px] py-[2px]\"\r\n                    >\r\n                      <Image\r\n                        src={avatar}\r\n                        alt=\"avatar\"\r\n                        width= {20}\r\n                        height= {20}\r\n                        className=\"rounded-full\" />\r\n                      <span className=\" font-light text-[11px]\">{member.name}</span>\r\n                      <button\r\n                        onClick={() => removeNotifyMember(member.id)}\r\n                        className=\" bg-[#5D56BD] rounded-full\"\r\n                      >\r\n                        <X className=\"w-4 h-4\" />\r\n                      </button>\r\n                    </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          {/* Right Column */}\r\n          <div className=\"space-y-2 mr-2\">\r\n            {/* Notes */}\r\n            <div className=\"space-y-2\">\r\n              <label className=\"block text-[13.5px]  text-[#333333]\">Message</label>\r\n              {/* <div className=\"h-[800px]\"> */}\r\n              <div className=\"\">\r\n              <TextareaBox notes={notes} setNotes={setNotes} fromTodo={false}/>\r\n              </div>\r\n              {/* </div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n          {/* Footer */}\r\n          <div className=\"flex justify-end gap-3 px-3 mt-3 pr-6\">\r\n            <button\r\n              onClick={handleSubmit}\r\n              className=\"px-5 py-2.5 text-white bg-[#5D56BD] rounded-lg text-[13.5px] font-light\"\r\n            >\r\n              Post this message\r\n            </button>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"px-7 py-1 border-[#6BBD56] border-[1.5px] text-[#6BBD56] rounded-lg font-medium text-[13.5px]\"\r\n            >\r\n              Save as draft\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default NoticeBoardModal;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 647, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 653, "column": 0}, "map": {"version":3,"sources":["file://C%3A/G/BlackCoffer/projects/next-project-management/src/components/overview/NoticeBoard/SortedModal.tsx"],"sourcesContent":["import { SetStateAction, useState } from \"react\";\r\nimport {Dispatch} from \"react\"; \r\nimport {X} from 'lucide-react'\r\ninterface SortedProps{\r\n  isOpen: boolean,\r\n  onClose: ()=> void,\r\n  Active: string,\r\n  setActive: Dispatch<SetStateAction<string>>;\r\n}\r\nexport default function Modal({ isOpen, onClose, Active, setActive }:SortedProps) {\r\n  const [selectedOption, setSelectedOption] = useState(\"By original post date\");\r\n\r\n  const handleSave = () => {\r\n    console.log(\"Saved option:\", Active);\r\n    setActive(selectedOption);\r\n    onClose();\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-30 flex justify-center items-center z-50 overflow-y-auto no-scrollbar\">\r\n      <div className=\"bg-white w-[500px]  h-[425px] rounded-xl shadow-lg px-6 py-3 mt-[230px] font-sans ml-[32px]\">\r\n        <div className=\"flex  mt-[2px]\">\r\n        <h2 className=\"text-[19px] font-medium mb-4 text-[#333333]\">How should messages be sorted?</h2>\r\n        <X className=\"ml-auto text-[#4D4D4D]\" onClick={onClose}/>\r\n        </div>\r\n        <form className=\"mt-[12px] ml-[8px]\">\r\n          <div className=\"space-y-1\">\r\n            <label className=\"flex items-center space-x-2\">\r\n              <input\r\n                type=\"radio\" \r\n                name=\"sorting\"\r\n                value=\"By original post date\"\r\n                checked={selectedOption === \"By original post date\"}\r\n                onChange={() => setSelectedOption(\"By original post date\")}\r\n                className=\"text-[#565DBD]\"\r\n              />\r\n              <span className=\"text-[#333333] font-medium\">By original post date</span>\r\n            </label>\r\n            <p className=\"text-[#808080] text-[12px] ml-6\">The most recent message will appear first, followed by older ones.</p>\r\n            \r\n            <label className=\"flex items-center space-x-2 pt-[18px]\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"sorting\"\r\n                value=\"By latest comment\"\r\n                checked= {selectedOption===\"By latest comment\"}\r\n                onChange={() => setSelectedOption(\"By latest comment\")}\r\n                className=\"text-[#565DBD]\"\r\n              />\r\n              <span className=\"text-[#333333] font-medium\">By latest comment</span>\r\n            </label>\r\n            <p className=\"text-[#808080] text-[13px] ml-6 mt-2\">Messages with recent comments will be shown first, regardless of when the message was posted.</p>\r\n            \r\n            <label className=\"flex items-center space-x-2 pt-4\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"sorting\"\r\n                value=\"Alphabetically A-Z\"\r\n                checked={selectedOption === \"Alphabetically A-Z\"}\r\n                onChange={() => setSelectedOption(\"Alphabetically A-Z\")}\r\n                className=\"text-[#565DBD]\"\r\n              />\r\n              <span className=\"text-[#333333] font-medium \">Alphabetically A-Z</span>\r\n            </label>\r\n            <p className=\"text-[#808080] text-[13px] ml-6\">Messages will be organized alphabetically by title.</p>\r\n          </div>\r\n        </form>\r\n        <p className=\"text-[#333333] text-[15px]  mt-6\">Everyone on the project will see messages in this order after you save.</p>\r\n        <div className=\"flex justify-end space-x-3 mt-[34px]\">\r\n        <button\r\n            onClick={handleSave}\r\n            className=\"bg-[#5D56BD] text-white px-4 py-2 text-[13px] rounded-lg font-light\"\r\n          >\r\n            Save Change\r\n          </button>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"bg-[#999999] text-white px-4 py-2 text-[13px] rounded-lg font-light\"\r\n          >\r\n            Never mind\r\n          </button>\r\n         \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;;AAOe,SAAS,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAc;;IAC9E,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErD,MAAM,aAAa;QACjB,QAAQ,GAAG,CAAC,iBAAiB;QAC7B,UAAU;QACV;IACF;IAEA,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACf,6LAAC;4BAAG,WAAU;sCAA8C;;;;;;sCAC5D,6LAAC,+LAAA,CAAA,IAAC;4BAAC,WAAU;4BAAyB,SAAS;;;;;;;;;;;;8BAE/C,6LAAC;oBAAK,WAAU;8BACd,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAM,WAAU;;kDACf,6LAAC;wCACC,MAAK;wCACL,MAAK;wCACL,OAAM;wCACN,SAAS,mBAAmB;wCAC5B,UAAU,IAAM,kBAAkB;wCAClC,WAAU;;;;;;kDAEZ,6LAAC;wCAAK,WAAU;kDAA6B;;;;;;;;;;;;0CAE/C,6LAAC;gCAAE,WAAU;0CAAkC;;;;;;0CAE/C,6LAAC;gCAAM,WAAU;;kDACf,6LAAC;wCACC,MAAK;wCACL,MAAK;wCACL,OAAM;wCACN,SAAU,mBAAiB;wCAC3B,UAAU,IAAM,kBAAkB;wCAClC,WAAU;;;;;;kDAEZ,6LAAC;wCAAK,WAAU;kDAA6B;;;;;;;;;;;;0CAE/C,6LAAC;gCAAE,WAAU;0CAAuC;;;;;;0CAEpD,6LAAC;gCAAM,WAAU;;kDACf,6LAAC;wCACC,MAAK;wCACL,MAAK;wCACL,OAAM;wCACN,SAAS,mBAAmB;wCAC5B,UAAU,IAAM,kBAAkB;wCAClC,WAAU;;;;;;kDAEZ,6LAAC;wCAAK,WAAU;kDAA8B;;;;;;;;;;;;0CAEhD,6LAAC;gCAAE,WAAU;0CAAkC;;;;;;;;;;;;;;;;;8BAGnD,6LAAC;oBAAE,WAAU;8BAAmC;;;;;;8BAChD,6LAAC;oBAAI,WAAU;;sCACf,6LAAC;4BACG,SAAS;4BACT,WAAU;sCACX;;;;;;sCAGD,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAQX;GA/EwB;KAAA"}},
    {"offset": {"line": 883, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 889, "column": 0}, "map": {"version":3,"sources":["file://C%3A/G/BlackCoffer/projects/next-project-management/src/components/overview/NoticeBoard/EditModal.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Image from 'next/image';\r\nimport editIcon from '../../../../public/assets/Edit Button.png';\r\nimport deleteIcon from '../../../../public/assets/deleteIcon.png';\r\n\r\ninterface EditModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  messageOption: Array<string>;\r\n  onUpdateMessageOption: (updatedOptions: string[]) => void;\r\n}\r\n\r\nconst EditModal = ({ isOpen, onClose, messageOption, onUpdateMessageOption }: EditModalProps) => {\r\n  const [newCategory, setNewCategory] = useState(\"\");\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [editingIndex, setEditingIndex] = useState<number | null>(null);\r\n  const [editedCategory, setEditedCategory] = useState(\"\");\r\n\r\n  // Add a new category\r\n  const handleAddCategory = () => {\r\n    if (newCategory.trim() !== \"\") {\r\n      const updatedCategories = [...messageOption, newCategory];\r\n      onUpdateMessageOption(updatedCategories); // Update parent state\r\n      setNewCategory(\"\");\r\n      setIsAdding(false);\r\n    }\r\n  };\r\n\r\n  // Delete a category\r\n  const handleDeleteCategory = (index: number) => {\r\n    const updatedCategories = messageOption.filter((_, i) => i !== index);\r\n    onUpdateMessageOption(updatedCategories); // Update parent state\r\n  };\r\n\r\n  // Save edited category\r\n  const handleSaveEdit = (index: number) => {\r\n    if (editedCategory.trim() === \"\") return; // Validate new name\r\n    const updatedCategories = [...messageOption];\r\n    updatedCategories[index] = editedCategory;\r\n    onUpdateMessageOption(updatedCategories); // Update parent state\r\n    setEditingIndex(null); // Close editing mode\r\n    setEditedCategory(\"\"); // Clear edited category\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-30  overflow-y-auto no-scrollbar\">\r\n      <div className=\"bg-white rounded-xl shadow-lg w-[485px]  mt-[240px] h-[420px] ml-2\">\r\n        <div className=\"flex justify-between items-center pt-3 pb-[5px] px-3 border-b pl-3\">\r\n          <div className=\"flex flex-col pl-3\">\r\n          <h2 className=\"text-[19px] text-[#333333] font-medium pt-[3px]\">Edit Notice Board Categories</h2>\r\n          <p className=\"text-[13px] text-[#808080] mb-3 mt-1\">\r\n            Set up categories for this Notice Board below.\r\n          </p>\r\n          </div>\r\n          <button onClick={onClose} className=\"text-[#4D4D4D] hover:text-gray-700 -translate-y-5\">\r\n            ✖\r\n          </button>\r\n        </div>\r\n        <div className=\"p-1 px-6\">\r\n          \r\n          <ul>\r\n            {messageOption.map((category, index) => (\r\n              <div className=\"mt-[2px]\">\r\n              <li\r\n                key={index}\r\n                className=\"flex justify-between items-center py-2 text-[18px]\">\r\n                {editingIndex === index ? (\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={editedCategory}\r\n                      onChange={(e) => setEditedCategory(e.target.value)}\r\n                      className=\"flex-grow border border-gray-300 rounded-l px-3 py-2\"\r\n                    />\r\n                    <button\r\n                      onClick={() => handleSaveEdit(index)}\r\n                      className=\"bg-[#6BBD56] text-white px-3 py-2 rounded-r hover:bg-green-600 ml-auto\"\r\n                    >\r\n                      ✔\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        setEditingIndex(null);\r\n                        setEditedCategory(\"\"); // Reset edit state\r\n                      }}\r\n                      className=\"bg-[#FF0000] ml-2 px-3 py-2 text-white hover:bg-red-700\"\r\n                    >\r\n                      ✖\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"flex justify-between items-center w-full font-sans group\">\r\n                    <span className=\"text-[#333333] mb-2 text-[15.5px]\">{category}</span>\r\n                    <div className=\"flex items-center space-x-2 ml-auto opacity-0 group-hover:opacity-100\">\r\n                      <button\r\n                        onClick={() => {\r\n                          setEditingIndex(index); \r\n                          setEditedCategory(category); \r\n                        }}\r\n                        className=\"text-yellow-500 hover:text-yellow-700 ml-auto\"\r\n                      >\r\n                        <Image src={editIcon} alt=\"edit\" width={24} height={24} />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleDeleteCategory(index)}\r\n                        className=\"text-[#FF0000] hover:text-red-700\"\r\n                      >\r\n                        <Image src={deleteIcon} alt=\"delete\" width={24} height={24} />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </li>\r\n              <hr className=\"w-[480px] -translate-x-6\"/>\r\n              </div>\r\n            ))}\r\n          </ul>\r\n          {isAdding ? (\r\n            <div className=\"flex items-center mt-4\">\r\n              <input\r\n                type=\"text\"\r\n                value={newCategory}\r\n                onChange={(e) => setNewCategory(e.target.value)}\r\n                placeholder=\"Enter category name...\"\r\n                className=\"flex-grow border border-gray-300 rounded-l px-3 py-2 focus:outline-none focus:ring focus:ring-indigo-200\"\r\n              />\r\n              <button\r\n                onClick={handleAddCategory}\r\n                className=\"bg-[#6BBD56] text-white px-3 py-2 rounded-r hover:bg-green-600 ml-2\"\r\n              >\r\n                ✔\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  setNewCategory(\"\");\r\n                  setIsAdding(false);\r\n                }}\r\n                className=\"bg-[#FF0000] ml-2 px-3 py-2 text-white hover:bg-red-700\"\r\n              >\r\n                ✖\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <button\r\n              onClick={() => setIsAdding(true)}\r\n              className=\"mt-[27px] bg-[#565DBD] text-white px-3 py-2 text-[13.5px] rounded-lg\"\r\n            >\r\n              Add Category\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditModal;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1203, "column": 0}, "map": {"version":3,"sources":["file://C%3A/G/BlackCoffer/projects/next-project-management/src/components/overview/NoticeBoard/NoticeDetail.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Image from \"next/image\";\r\nimport googleMeet from \"../../../../public/assets/Google Meet image.png\";\r\nimport avtar from \"../../../../public/assets/avtar.jpg\";\r\nimport Comment from \"../Textarea/Comment\";\r\nimport Link from \"next/link\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"next/navigation\";\r\nimport useSWR, { mutate } from \"swr\";\r\nimport {\r\n  Search,\r\n  ChevronLeft,\r\n  ChevronRight,\r\n  ArrowLeft\r\n} from \"lucide-react\";\r\n\r\ninterface DetailProps {\r\n  id: string;\r\n  projectId: string | null;\r\n  isOpenDetail: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst fetcher = async (url: string) => {\r\n  const response = await axios.get(url, {\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nconst NoticeDetail = ({ id, projectId, isOpenDetail, onClose }: DetailProps) => {\r\n  interface NoticeData {\r\n    postedBy?: { fullName: string };\r\n    postedOn?: string;\r\n    category?: string;\r\n    title?: string;\r\n    description?: string;\r\n    notifyWhenPosted?: { fullName: string }[];\r\n    comments?: {\r\n      avatar: string;\r\n      commentedBy: { fullName: string; role: string };\r\n      commentedOn: string;\r\n      comment: string;\r\n    }[];\r\n  }\r\n  interface Project {\r\n    _id: string;\r\n    name: string;\r\n    pinned: boolean;\r\n    archived: boolean;\r\n  }\r\n\r\n  const [comment, setComment] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [project, setProject] = useState<Project>({\r\n    _id: \"\",\r\n    name: \"\",\r\n    pinned: false,\r\n    archived: false,\r\n  });\r\n\r\n  // Using SWR for notice data\r\n  const noticeUrl = `${process.env.NEXT_PUBLIC_API_URL}/noticeboard/${id}`;\r\n  const { data: noticeData = {}, error: noticeError } = useSWR<NoticeData>(\r\n    isOpenDetail ? noticeUrl : null,\r\n    fetcher,\r\n    {\r\n      refreshInterval: 5000, // Refresh every 5 seconds\r\n      revalidateOnFocus: true,\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchProject = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${process.env.NEXT_PUBLIC_API_URL}/projects/project/${projectId}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n        setProject(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching project:\", error);\r\n      }\r\n    };\r\n    if (isOpenDetail && projectId) {\r\n      fetchProject();\r\n    }\r\n  }, [projectId, isOpenDetail]);\r\n\r\n  const handlePostComment = async () => {\r\n    if (!comment.trim()) return;\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.NEXT_PUBLIC_API_URL}/noticeboard/${id}/comment`,\r\n        { comment },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      // Clear input field after posting\r\n      setComment(\"\");\r\n      \r\n      // Trigger SWR to revalidate the data\r\n      mutate(noticeUrl);\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        console.error(\"Error posting comment:\", error.response?.data || error.message);\r\n      } else {\r\n        console.error(\"Error posting comment:\", error);\r\n      }\r\n      setError(\"Failed to post comment. Try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpenDetail) return null;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bg-[#F8F7FA] min-h-screen\">\r\n        <div className=\"pb-6\">\r\n          <div className=\"pl-2 pr-6 pb-0 mt-3 font-sans ml-[22px] \">\r\n            <nav className=\"flex items-center justify-between mb-6 mt-[2px] text-[#808080] text-[13.5px]\">\r\n              <div className=\"flex items-center space-x-[1px]\">\r\n                <Link href=\"/main/dashboard\" className=\"hover:text-gray-900\">\r\n                  Dashboard\r\n                </Link>\r\n                <span className=\"text-[#808080]\"><ChevronRight width={20} height={20} strokeWidth={1.5} /></span>\r\n                <Link href=\"/projects\" className=\"hover:text-gray-900\">\r\n                  {project?.name}\r\n                </Link>\r\n                <span className=\"text-[#808080]\"><ChevronRight width={20} height={20} strokeWidth={1.5} /></span>\r\n                <span className=\"text-[#4D4D4D] font-medium text-[15px]\">Notice Board</span>\r\n              </div>\r\n            </nav>\r\n          </div>\r\n          <div>\r\n            <button\r\n              className=\"flex font-sans flex-row justify-center items-center px-[13px] py-2 bg-[#5D56BD] text-white rounded-lg mx-4  ml-[28px] -translate-y-3 font-light\"\r\n              onClick={onClose}\r\n            >\r\n              <ArrowLeft className=\"text-[13px] h-5 w-5\" strokeWidth={1.5} />\r\n              <span className=\"text-[13px] ml-2\">Go back</span>\r\n            </button>\r\n            <div className=\"mx-4 ml-[24px] mt-[26px] px-4 py-1 bg-white rounded-lg  font-sans\">\r\n              <div className=\"mb-6 pt-2 mt-2\">\r\n                <div className=\"flex justify-between items-start\">\r\n                  <div className=\"flex\">\r\n                    <div className=\"mt-1 text-[13.5px] text-[#4D4D4D] ml-3\">\r\n                      Posted by &nbsp;: &nbsp;\r\n                      <span className=\"text-[#333333]\">{noticeData?.postedBy?.fullName || \"Unknown\"}</span> on&nbsp;\r\n                      {noticeData?.postedOn\r\n                        ? new Date(noticeData.postedOn).toLocaleDateString(\"en-GB\", {\r\n                          day: \"2-digit\",\r\n                          month: \"short\",\r\n                          year: \"numeric\",\r\n                        })\r\n                        : \"N/A\"}\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n                <div className=\"h-[6px]\"></div>\r\n                <div className=\"ml-3 text-[#4D4D4D] text-[13.5px] mt-[1px]\">Category &nbsp;&nbsp;:&nbsp;&nbsp;\r\n                  <span className=\"text-[#333333]\">{noticeData.category}</span></div>\r\n                <div><h1 className=\"text-[#4D4D4D] font-medium mt-4 ml-3 text-[22.5px]\">{noticeData.title}</h1></div>\r\n                <div className=\"mt-4 gap-6 text-[#4D4D4D] ml-3\">{noticeData.description}</div>\r\n                <div className=\"flex justify-center my-4\">\r\n                </div>\r\n                <div className=\"flex items-center gap-2 mt-2\">\r\n                  <span className=\"text-sm text-[#4D4D4D] ml-4\">When post, notify :</span>\r\n                  <div className=\"flex  text-white\">\r\n                    {noticeData.notifyWhenPosted?.map((watcher, index) => (\r\n                      <div className=\"flex items-center gap-1 p-1 \" key={index}>\r\n                        <div className=\"flex justify-center items-center bg-[#5D56BD] rounded-full  px-1 py-[2px]\">\r\n                          <Image src={avtar} alt=\"photo\" className=\"rounded-full\" width={24} height={24} />\r\n                          <div className=\"text-[11px] text-white rounded-xl px-1 \">{watcher?.fullName}</div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Comments Section */}\r\n            <div className=\"ml-[26px] my-4 bg-white p-4 rounded-lg mt-6 w-[1020px] \">\r\n              <div className=\" border-[#CCCCCC] pb-6\">\r\n                <h2 className=\"text-[19px] font-medium text-[#333333] mb-4\">Comments</h2>\r\n                {/* Comment Input */}\r\n                <div>\r\n                  <div className=\"mt-9 flex gap-3\">\r\n                    <Image src={avtar} alt=\"avatar\" className=\"w-12 h-12 rounded-full\" width={48} height={48} />\r\n                    <div className=\"flex flex-grow\">\r\n                      <Comment notes={comment} setNotes={setComment} fromTodo={false} />\r\n                    </div>\r\n                  </div>\r\n                  {error && <p className=\"text-red-500 text-sm mt-1\">{error}</p>}\r\n                  <button\r\n                    onClick={handlePostComment}\r\n                    className=\"px-8 py-2 bg-[#5D56BD] text-white rounded-lg ml-[890px] mt-4 text-[12px]\"\r\n                    disabled={loading}\r\n                  >\r\n                    {loading ? \"Posting...\" : \"Send\"}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              {/* Display Comments */}\r\n              <div className=\"space-y-4 mt-4 \">\r\n                {noticeData.comments && noticeData.comments.length > 0 ? (\r\n                  noticeData.comments.map((comment, index) => (\r\n                    <div key={index} className=\"flex gap-3 border-t border-[#CCCCCC] \">\r\n                      <div>\r\n                        <div className=\"flex mt-4\">\r\n                          <Image src={avtar} alt={comment.commentedBy?.fullName} className=\"rounded-full\" width={48} height={48} />\r\n                          <div className=\"flex-1 ml-[20px]\">\r\n                            <div className=\"flex items-center gap-2 text-[#333333]\">\r\n                              <span className=\"font-medium text-[16px]\">{comment.commentedBy?.fullName}</span>\r\n                              <span className=\"text-[17px] font-medium\">({comment.commentedBy?.role[0].toUpperCase() + comment.commentedBy?.role.slice(1)}\r\n                            )</span>\r\n                            </div>\r\n                            <div className=\"text-[13.5px] text-[#666666] mb-1\">\r\n                              {new Date(comment.commentedOn).toLocaleDateString(\"en-GB\", {\r\n                                weekday: \"short\",\r\n                                day: \"2-digit\",\r\n                                month: \"short\",\r\n                                year: \"numeric\",\r\n                              })}{\" \"}\r\n                              &nbsp;\r\n                              {new Date(comment.commentedOn).toLocaleTimeString(\"en-GB\", {\r\n                                hour: \"2-digit\",\r\n                                minute: \"2-digit\",\r\n                                hour12: false,\r\n                              })}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <p className=\"text-sm text-[#666666] ml-16\">{comment.comment}</p>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p className=\"text-gray-500 italic text-sm\">No comments yet</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoticeDetail;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1824, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}