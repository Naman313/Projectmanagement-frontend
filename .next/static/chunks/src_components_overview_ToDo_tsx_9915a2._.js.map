{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/G/BlackCoffer/projects/next-project-management/src/components/overview/ToDo.tsx"],"sourcesContent":["'use client'\r\nimport React, { useState, useEffect } from 'react';\r\nimport Image from 'next/image';\r\nimport { Divide, Plus, X } from 'lucide-react';\r\nimport { useParams } from 'next/navigation';\r\nimport axios from 'axios';\r\nimport AddToDoModal from './ToDo/AddToDoModal';\r\nimport ToDos from './ToDo/ToDos';\r\nimport useSWR, { mutate } from 'swr';\r\nimport avatar from '../../../public/assets/avtar.jpg'\r\nimport Link from 'next/link';\r\nimport EditIcon from \"../../../public/assets/Edit Button 03.png\";\r\nimport TrashIcon from \"../../../public/assets/Trash Icon 02.png\"\r\nimport DeleteIcon from \"../../../public/assets/Trash Icon.png\";\r\nimport EditButton from \"../../../public/assets/Edit Button.png\";\r\nimport EditTodos from './ToDo/EditTodos';\r\nimport {\r\n  Search,\r\n  ChevronDown,\r\n  ChevronLeft,\r\n  ChevronRight\r\n} from \"lucide-react\";\r\nimport { MoreVertical } from 'lucide-react';\r\n\r\nconst API_URL = process.env.NEXT_PUBLIC_API_URL;\r\n\r\ninterface Task {\r\n  _id: string;\r\n  description: string;\r\n  createdBy: string;\r\n  Task: string;\r\n  dueDate: string;\r\n  completed: boolean;\r\n}\r\n\r\ninterface TodoList {\r\n  _id: string;\r\n  title: string;\r\n  items: Task[];\r\n}\r\n\r\ninterface Project {\r\n  _id: string;\r\n  name: string;\r\n  pinned: boolean;\r\n  archived: boolean;\r\n}\r\n\r\ninterface TodosByStatus {\r\n  [listId: string]: {\r\n    pending: Task[];\r\n    completed: Task[];\r\n  }\r\n}\r\n\r\nexport default function ToDo() {\r\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\r\n  const [newListName, setNewListName] = useState('');\r\n  const [isTodoModal, setTodoModal] = useState(false);\r\n  const [openTodo, setOpenTodo] = useState(false);\r\n  const [selectedListId, setSelectedListId] = useState<string>('');\r\n  const [todosByStatus, setTodosByStatus] = useState<TodosByStatus>({});\r\n  const { id: projectId } = useParams();\r\n  const [TodoId, setTodoId] = useState(\"\")\r\n  const [isDropdown, setIsDropdown] = useState<boolean>(false);\r\n  const [listTitle, setListTitle] = useState<string>(\"\");\r\n  const [todoEdited, setTodoEdited]= useState(\"\");\r\n  const [project, setProject] = useState<Project>({\r\n    _id: \"\",\r\n    name: \"\",\r\n    pinned: false,\r\n    archived: false,\r\n  });\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  // Fetch todo lists\r\n  const fetchTodoLists = async (url: string, token: string | null) => {\r\n    if (!token) return [];\r\n    try {\r\n      const response = await axios.get(url, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error fetching todo lists:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchProject = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${process.env.NEXT_PUBLIC_API_URL}/projects/project/${projectId}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n        \r\n        setProject(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching project:\", error);\r\n      }\r\n    };\r\n    fetchProject();\r\n  }, [projectId]);\r\n\r\n  const { data: todoLists = [], error } = useSWR<TodoList[]>(\r\n    token ? [`${API_URL}/todolists/${projectId}`, token] : null,\r\n    ([url, token]) => fetchTodoLists(url, localStorage.getItem('token')),\r\n    {\r\n      revalidateOnFocus: false,\r\n      dedupingInterval: 2000\r\n    }\r\n  );\r\n\r\n  // Fetch todos for each list and organize by status\r\n  const { data: todos = {} } = useSWR<Record<string, Task[]>>(\r\n    token && todoLists.length > 0 ? ['todos', todoLists.map(list => list._id), token] : null,\r\n    async () => {\r\n      const results: Record<string, Task[]> = {};\r\n      await Promise.all(\r\n        todoLists.map(async (list) => {\r\n          try {\r\n            const response = await axios.get(`${API_URL}/todos/list/${list._id}`, {\r\n              headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n            results[list._id] = response.data.map((todo: any) => ({\r\n              _id: todo._id,\r\n              description: todo.notes || 'No Description',\r\n              createdBy: todo.createdBy.fullName || \"\",\r\n              Task: todo.task || \" \",\r\n              dueDate: todo.dueDate,\r\n              completed: todo.status === 'Completed'\r\n            }));\r\n\r\n            // Organize todos by status\r\n            const newTodosByStatus = { ...todosByStatus };\r\n            newTodosByStatus[list._id] = {\r\n              pending: results[list._id].filter(todo => !todo.completed),\r\n              completed: results[list._id].filter(todo => todo.completed)\r\n            };\r\n            setTodosByStatus(newTodosByStatus);\r\n          } catch (error) {\r\n            console.error('Error fetching todos:', error);\r\n            results[list._id] = [];\r\n          }\r\n        })\r\n      );\r\n      return results;\r\n    },\r\n    {\r\n      revalidateOnFocus: false,\r\n      dedupingInterval: 2000\r\n    }\r\n  );\r\n\r\n  const handleCreateList = async () => {\r\n    if (!newListName.trim()) return;\r\n    try {\r\n      await axios.post(\r\n        `${API_URL}/todolists`,\r\n        { title: newListName, projectId },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      mutate([`${API_URL}/todolists/${projectId}`, token]);\r\n      setNewListName('');\r\n      setIsCreateModalOpen(false);\r\n    } catch (error) {\r\n      console.error('Error creating todo list:', error);\r\n    }\r\n  };\r\n\r\n  const handleSaveEditTitle = async (todoListId: string) => {\r\n    // console.log(listTitle,\"list New name\")\r\n    try {\r\n      const res = await axios.put(`${API_URL}/todolists/${todoListId}`,\r\n        { title: listTitle },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      setSelectedListId(\"\")\r\n      setIsEditTodos(\"\")\r\n      const updatedTodoLists = todoLists.map(list =>\r\n        list._id === todoListId ? { ...list, title: listTitle } : list\r\n      );\r\n      mutate([`${API_URL}/todolists/${projectId}`, token])\r\n      setIsEditTodos(\"\")\r\n      setTodoEdited(\"\")\r\n    }\r\n    catch (error) {\r\n      console.log(\"Error in updating Todos Name\");\r\n    }\r\n  }\r\n  const toggleTaskCompletion = async (todoId: string, listId: string, currentStatus: boolean) => {\r\n    try {\r\n      const newStatus = currentStatus ? 'Pending' : 'Completed';\r\n      await axios.patch(\r\n        `${API_URL}/todos/toogleTodo/${todoId}`,\r\n        { status: newStatus },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n\r\n      // Update local state\r\n      const updatedTodosByStatus = { ...todosByStatus };\r\n      const todo = [...updatedTodosByStatus[listId].pending, ...updatedTodosByStatus[listId].completed]\r\n        .find(t => t._id === todoId);\r\n\r\n      if (todo) {\r\n        if (currentStatus) {\r\n          // Moving from completed to pending\r\n          updatedTodosByStatus[listId].completed = updatedTodosByStatus[listId].completed.filter(t => t._id !== todoId);\r\n          updatedTodosByStatus[listId].pending.push({ ...todo, completed: false });\r\n        } else {\r\n          // Moving from pending to completed\r\n          updatedTodosByStatus[listId].pending = updatedTodosByStatus[listId].pending.filter(t => t._id !== todoId);\r\n          updatedTodosByStatus[listId].completed.push({ ...todo, completed: true });\r\n        }\r\n        setTodosByStatus(updatedTodosByStatus);\r\n      }\r\n\r\n      mutate([`${API_URL}/todolists/${projectId}`, token]);\r\n      mutate(['todos', todoLists.map(list => list._id), token]);\r\n    } catch (error) {\r\n      console.error('Error updating todo status:', error);\r\n    }\r\n  };\r\n  const handleDeleteList = async (listId: string) => {\r\n    const todoListId = listId;\r\n    try {\r\n      const res = await axios.delete(`${API_URL}/todolists/${todoListId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n\r\n      mutate([`${API_URL}/todolists/${projectId}`, token])\r\n    }\r\n    catch (error) {\r\n      console.log(\"Error in updating Todos Name\");\r\n    }\r\n  }\r\n  const handleDeleteTodo = async (todoId: string, listId: string) => {\r\n    try {\r\n      await axios.delete(`${API_URL}/todos/${todoId}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      const updatedTodosByStatus = { ...todosByStatus };\r\n      updatedTodosByStatus[listId].pending = updatedTodosByStatus[listId].pending.filter(t => t._id !== todoId);\r\n      updatedTodosByStatus[listId].completed = updatedTodosByStatus[listId].completed.filter(t => t._id !== todoId);\r\n      setTodosByStatus(updatedTodosByStatus);\r\n\r\n      mutate([`${API_URL}/todolists/${projectId}`, token]);\r\n      mutate(['todos', todoLists.map(list => list._id), token]);\r\n    } catch (error) {\r\n      console.error('Error deleting todo:', error);\r\n    }\r\n  };\r\n  const [todoIdForOverview, setTodoIdForOverview] = useState<string>(\"\")\r\n  const handleTodoClick = (TodoId: string) => {\r\n    // console.log(TodoId,\"TodoId from overview\")\r\n    setTodoIdForOverview(TodoId);\r\n    setOpenTodo(true)\r\n  }\r\n\r\n  const [isEditTodos, setIsEditTodos] = useState<string>(\"\");\r\n  const [listNewNamem, setListNewName] = useState<string>(\"\");\r\n  const handleTodoClickVertical= (listId: string)=>{\r\n    \r\n   todoEdited=== \"\" ? setTodoEdited(listId): setTodoEdited(\"\")\r\n  }\r\n\r\n  const [isEditModal, setIsEditModal]= useState(false);\r\n  const handleEditTodo=(todoId: string, listId: string)=>{\r\n    // console.log(listId, todoId)\r\n    setTodoId(todoId);\r\n    setIsEditModal(true);\r\n  }\r\n  const handleClickEdit = (listId: string, listTitle: string) => {\r\n    // console.log(\"Button clicked\")\r\n    setListTitle(listTitle)\r\n    if (!isEditTodos.includes(listId)) {\r\n      setIsEditTodos(listId);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {openTodo ?\r\n        <ToDos isOpen={openTodo} onClose={() => setOpenTodo(false)} projectId={typeof projectId === \"string\" ? projectId : null} TodoId={todoIdForOverview}\r\n          revalidateTodos={() => {\r\n            mutate([`${API_URL}/todolists/${projectId}`, token]);\r\n            mutate(['todos', todoLists.map(list => list._id), token]);\r\n          }} /> :\r\n        <div className=\"h-screen bg-[#F8F7FA] flex flex-col font-sans\">\r\n          <div className=\"pl-7 pr-6 pb-0 mt-2\">\r\n            <nav className=\"flex items-center justify-between mb-6 mt-[2px] text-[#808080] text-[13.5px]\">\r\n              <div className=\"flex items-center space-x-[1px]\">\r\n                <Link href=\"/main/dashboard\" className=\"hover:text-gray-900\">\r\n                  Dashboard\r\n                </Link>\r\n                <span className=\"text-[#808080]\"><ChevronRight width={20} height={20} strokeWidth={1.5} /></span>\r\n                <Link href=\"/projects\" className=\"hover:text-gray-900\">\r\n                  {project?.name}\r\n                </Link>\r\n                <span className=\"text-[#808080]\"><ChevronRight width={20} height={20} strokeWidth={1.5} /></span>\r\n                <span className=\"text-[#4D4D4D] font-medium text-[15px]\">ToDo's</span>\r\n              </div>\r\n            </nav>\r\n          </div>\r\n          <div className=\"px-8 py-[2px]\">\r\n            <button\r\n              className=\"flex items-center font-regular text-[12px] px-[20px] py-2 bg-[#5D56BD] text-white rounded-lg\"\r\n              onClick={() => setIsCreateModalOpen(true)}\r\n            >\r\n              <Plus className=\"h-5 w-5 mr-2\" strokeWidth={2} /> Create List\r\n            </button>\r\n\r\n            {isTodoModal && (\r\n              <AddToDoModal\r\n                isOpen={isTodoModal}\r\n                onClose={() => {\r\n                  setTodoModal(false);\r\n                  mutate([`${API_URL}/todolists/${projectId}`, token]);\r\n                  mutate(['todos', todoLists.map(list => list._id), token]);\r\n                }}\r\n                listId={selectedListId}\r\n              />\r\n            )}\r\n            {isEditModal && (<EditTodos isOpen={isEditModal} onClose={() => {\r\n                  setIsEditModal(false);\r\n                  mutate([`${API_URL}/todolists/${projectId}`, token]);\r\n                  mutate(['todos', todoLists.map(list => list._id), token]);\r\n                }}\r\n                listId={selectedListId}\r\n                todoId= {TodoId}/>)}\r\n            {isCreateModalOpen && (\r\n              <div className=\"bg-white mt-9 px-4 py-2 rounded-xl w-[1010px]\">\r\n                <div className=\"flex items-center justify-between pr-3\">\r\n                  <div className=\"text-[18.5px] font-medium mt-2\">Create list</div>\r\n                  <button onClick={() => setIsCreateModalOpen(false)} className=\"text-gray-500 hover:text-gray-700\">\r\n                    <X className=\"h-6 w-6\" />\r\n                  </button>\r\n                </div>\r\n                <div className=\"mt-6 flex items-center\">\r\n                  <div className=\"w-3/4\">\r\n                    <div className='text-[#333333] text-[13.5px]'>List Name</div>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={newListName}\r\n                      onChange={(e) => setNewListName(e.target.value)}\r\n                      onKeyDown={(e) => {\r\n                        if (e.key === \"Enter\") {\r\n                          handleCreateList();\r\n                        }\r\n                      }}\r\n                      className=\"w-[525px] text-[#333333] border-[1px] text-[13.5px] border-[#CCCCCC] placeholder-[#B3B3B3] rounded-md p-2 mb-2 h-10 mt-1\"\r\n                      placeholder=\"Enter list name....\"\r\n                    />\r\n                  </div>\r\n                  <button\r\n                    className=\"py-[9px] ml-auto px-8 bg-[#5D56BD] text-white rounded-lg flex items-center text-[13.5px] font-normal\"\r\n                    onClick={handleCreateList}\r\n                  >\r\n                    Create\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {todoLists.length > 0 ? (\r\n              <div className=\"mt-7 px-1 py-2\">\r\n                {todoLists.map((list, index) => (\r\n                  <div key={index}>\r\n                    {isEditTodos.includes(list._id) ?\r\n                      <div key={list._id} className=\"bg-white px-2 py-[3px] rounded-xl mt-1 mb-2 w-[1010px]\">\r\n                        <div className=\"flex items-center justify-between pt-2\">\r\n                          <div className=\"flex items-center\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"text-[#333333] text-[14px] border rounded px-3 py-2 border-[#CCCCCC] w-[500px]\"\r\n                              value={listTitle}\r\n                              onChange={(e) => setListTitle(e.target.value)}\r\n                            />\r\n\r\n                          </div>\r\n                          <div className='flex gap-4 mr-3'>\r\n                            <button\r\n                              className=\"flex items-center text-[11.5px] px-[30px] py-[5px] bg-[#5D56BD] text-white rounded-[4px] font-normal\"\r\n                              onClick={() => {\r\n                                handleSaveEditTitle(list._id);\r\n                              }}\r\n                            >\r\n                              Save\r\n                            </button>\r\n                            <button\r\n                              className=\"flex items-center text-[11.5px] px-[5px] py-[5px] border border-[#CCCCCC] text-white rounded-[4px] font-normal\"\r\n                              onClick={() => {\r\n                                handleDeleteList(list._id);\r\n                              }}\r\n                            >\r\n                              <Image src={DeleteIcon} alt=\"Delete\" className='w-5 h-5' />\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Rest of your todo list content */}\r\n                        <div className=\"mt-4\">\r\n                          {todosByStatus[list._id]?.pending.length > 0 ? <div>\r\n                            <h4 className=\"font-regular text-[#808080] mb-2 text-[13.5px]\">\r\n                              Pending ({todosByStatus[list._id].pending.length || 0})\r\n                            </h4></div> : <div></div>}\r\n                          {todosByStatus[list._id]?.pending.map(task => (\r\n                            <div className='flex'>\r\n                            <div key={task._id} className=\"flex items-center gap-4 p-4 bg-[#FAFAFA] \"\r\n                              onClick={() => handleTodoClick(task._id)}>\r\n                              <div className=\"flex-grow\">\r\n                                <p className=\"text-[12.5px] font-sans text-[#333333]\">{task.Task}</p>\r\n                                <div className=\"flex text-sm text-gray-500 mt-1\">\r\n                                  <span className='rounded-full'><Image src={avatar} width={18} height={18} alt=\"user\" className='rounded-full' /></span>\r\n                                  <span className='text-[#4D4D4D] text-[12.5px] ml-2'>{task?.createdBy}</span>\r\n                                  {\" \"} <span className='text-[#4D4D4D] text-[12.5px] ml-9'> <span className='font-light'>Due date:</span> {new Date(task.dueDate).toLocaleDateString('en-GB', {\r\n                                    day: '2-digit',\r\n                                    month: 'short',\r\n                                    year: 'numeric',\r\n                                  })}</span>\r\n                                </div>\r\n                              </div>\r\n                              \r\n                            </div>\r\n                            <div className=\"flex gap-2\">\r\n                                <button onClick={() => handleEditTodo(task._id, list._id)}>\r\n                                  <Image alt=\"edit\" src={EditButton} width={16} height={16} />\r\n                                </button>\r\n                                <button onClick={() => handleDeleteTodo(task._id, list._id)}>\r\n                                  <Image alt=\"delete\" src=\"/assets/myProjects/Trash Icon.png\" width={16} height={16} />\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n\r\n                        <div className=\"mt-4\">\r\n                          {todosByStatus[list._id]?.completed.length > 0 ? <div>\r\n                            <h4 className=\" text-[#808080] mb-2 text-[13.5px]\">\r\n                              Completed({todosByStatus[list._id]?.completed.length || 0})\r\n                            </h4></div> : <div></div>}\r\n\r\n                          {todosByStatus[list._id]?.completed.map(task => (\r\n                            <div key={task._id} className=\"flex items-center gap-4 p-4 bg-[#FAFAFA]\"\r\n                              onClick={() => handleTodoClick(task._id)}>\r\n                              <div className=\"flex-grow\">\r\n                                <p className=\"text-[12.5px] font-sans text-[#333333]\">{task.Task}</p>\r\n                                <div className=\"flex text-sm text-gray-500 mt-1\">\r\n                                  <span className='rounded-full'><Image src={avatar} width={18} height={18} alt=\"user\" className='rounded-full' /></span>\r\n                                  <span className='text-[#4D4D4D] text-[12.5px] ml-2'>{task?.createdBy}</span>\r\n                                  {\" \"} <span className='text-[#4D4D4D] text-[12.5px] ml-9'> <span className='font-light'>Due date:</span> {new Date(task.dueDate).toLocaleDateString('en-GB', {\r\n                                    day: '2-digit',\r\n                                    month: 'short',\r\n                                    year: 'numeric',\r\n                                  })}</span>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"flex gap-2\">\r\n                                <button onClick={() => handleEditTodo(task._id, list._id)}>\r\n                                  <Image alt=\"edit\" src={EditButton} width={16} height={16} />\r\n                                </button>\r\n                                <button onClick={() => handleDeleteTodo(task._id, list._id)}>\r\n                                  <Image alt=\"delete\" src=\"/assets/myProjects/Trash Icon.png\" width={16} height={16} />\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                      :\r\n                      <div key={list._id} className=\"bg-white px-2 py-[3px] rounded-xl mt-1 mb-4 w-[1010px]\">\r\n                        <div className=\"flex items-center justify-between pt-2\">\r\n                          <div className=\"flex items-center text-[#333333] font-medium text-[18px]\">\r\n                            {list.title}\r\n                            <span className='text-[#808080] text-[15px] ml-2 font-normal'>{todosByStatus[list._id]?.completed.length || 0}/{todosByStatus[list._id]?.completed.length + todosByStatus[list._id]?.pending.length || 0}</span>\r\n                          </div>\r\n                          <div className='flex gap-4'>\r\n                            <button\r\n                              className=\"flex items-center text-[11.5px] px-[14px] py-[5px] bg-[#5D56BD] text-white rounded-[4px] font-normal\"\r\n                              onClick={() => {\r\n                                setSelectedListId(list._id);\r\n                                setIsEditTodos(\"\")\r\n                                setTodoModal(true);\r\n                              }}\r\n                            >\r\n                              <Plus className=\"mr-2\" strokeWidth={1} /> Add To-Do\r\n                            </button>\r\n                            {/* {userId===currentUser } */}\r\n                            <div className='border h-[32px] ml-auto mr-2 p-[3px] '>\r\n                              <MoreVertical className='text-[#666666] p-[2px] shadow-sm' onClick={() => handleTodoClickVertical(list._id)} />\r\n                              <div>\r\n                                {todoEdited===list._id ? <div className=\"absolute right-0 mt-2 w-36 bg-white rounded-xl shadow-xl border border-gray-300 py-1 z-[100] -translate-x-6\">\r\n                                  <button\r\n                                    className=\"w-full px-4 py-2 text-[15px] hover:bg-gray-100 flex items-center text-[#4D4D4D]\"\r\n                                    onClick={() => handleClickEdit(list._id, list.title)}\r\n                                  >\r\n                                    <Image src={EditIcon} alt=\"Edit\" width={22} height={22} className=\"ml-3 mr-3\" />\r\n                                    Edit\r\n                                  </button>\r\n                                  {/* Proper Horizontal Line */}\r\n                                  <hr className=\"w-full border-gray-300 my-1\" />\r\n\r\n                                  <button\r\n                                    className=\"w-full px-4 py-2 text-[15px] hover:bg-gray-100 flex items-center text-[#4D4D4D]\"\r\n                                    onClick={() => handleDeleteList(list._id)}\r\n                                  >\r\n                                    <Image src={TrashIcon} alt=\"logout\" width={22} height={22} className=\" ml-3 mr-3\" />\r\n                                    Delete\r\n                                  </button>\r\n                                </div> : <></>}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"mt-4\">\r\n                          {todosByStatus[list._id]?.pending.length > 0 ? <div>\r\n                            <h4 className=\"font-regular text-[#808080] mb-2 text-[13.5px]\">\r\n                              Pending ({todosByStatus[list._id].pending.length || 0})\r\n                            </h4></div> : <div></div>}\r\n                          {todosByStatus[list._id]?.pending.map(task => (\r\n                            <div className='flex'>\r\n                            <div key={task._id} className=\"flex items-center gap-4 p-4 bg-[#FAFAFA]\"\r\n                              onClick={() => handleTodoClick(task._id)}>\r\n                              <div className=\"flex-grow\">\r\n                                <p className=\"text-[12.5px] font-sans text-[#333333]\">{task.Task}</p>\r\n                                <div className=\"flex text-sm text-gray-500 mt-1\">\r\n                                  <span className='rounded-full'><Image src={avatar} width={18} height={18} alt=\"user\" className='rounded-full' /></span>\r\n                                  <span className='text-[#4D4D4D] text-[12.5px] ml-2'>{task?.createdBy}</span>\r\n                                  {\" \"} <span className='text-[#4D4D4D] text-[12.5px] ml-9'> <span className='font-light'>Due date:</span> {new Date(task.dueDate).toLocaleDateString('en-GB', {\r\n                                    day: '2-digit',\r\n                                    month: 'short',\r\n                                    year: 'numeric',\r\n                                  })}</span>\r\n                                </div>\r\n                              </div>\r\n                              \r\n                            </div>\r\n                            <div className=\"flex gap-2\">\r\n                                <button onClick={() => handleEditTodo(task._id, list._id)}>\r\n                                  <Image alt=\"edit\" src={EditButton} width={16} height={16} />\r\n                                </button>\r\n                                <button onClick={() => handleDeleteTodo(task._id, list._id)}>\r\n                                  <Image alt=\"delete\" src=\"/assets/myProjects/Trash Icon.png\" width={16} height={16} />\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n\r\n                        <div className=\"mt-4\">\r\n                          {todosByStatus[list._id]?.completed.length > 0 ? <div>\r\n                            <h4 className=\" text-[#808080] mb-2 text-[13.5px]\">\r\n                              Completed({todosByStatus[list._id]?.completed.length || 0})\r\n                            </h4></div> : <div></div>}\r\n\r\n                          {todosByStatus[list._id]?.completed.map(task => (\r\n                            <div className='flex'>\r\n                            <div key={task._id} className=\"flex items-center gap-4 p-4 bg-[#FAFAFA]\"\r\n                              onClick={() => handleTodoClick(task._id)}>\r\n                              <div className=\"flex-grow\">\r\n                                <p className=\"text-[12.5px] font-sans text-[#333333]\">{task.Task}</p>\r\n                                <div className=\"flex text-sm text-gray-500 mt-1\">\r\n                                  <span className='rounded-full'><Image src={avatar} width={18} height={18} alt=\"user\" className='rounded-full' /></span>\r\n                                  <span className='text-[#4D4D4D] text-[12.5px] ml-2'>{task?.createdBy}</span>\r\n                                  {\" \"} <span className='text-[#4D4D4D] text-[12.5px] ml-9'> <span className='font-light'>Due date:</span> {new Date(task.dueDate).toLocaleDateString('en-GB', {\r\n                                    day: '2-digit',\r\n                                    month: 'short',\r\n                                    year: 'numeric',\r\n                                  })}</span>\r\n                                </div>\r\n                              </div>\r\n                              \r\n                              </div>\r\n                              <div className=\"flex gap-2\">\r\n                                <button onClick={() => handleEditTodo(task._id, list._id)}>\r\n                                  <Image alt=\"edit\" src={EditButton} width={16} height={16} />\r\n                                </button>\r\n                                <button onClick={() => handleDeleteTodo(task._id, list._id)}>\r\n                                  <Image alt=\"delete\" src=\"/assets/myProjects/Trash Icon.png\" width={16} height={16} />\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    }\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className='flex justify-center items-center mt-[146px] ml-12'>\r\n                {isCreateModalOpen ? <div></div> : <div className=\"flex flex-col items-center justify-center py-8\">\r\n                  <Image\r\n                    src=\"/assets/ToDo Illustration.png\"\r\n                    alt=\"Empty Status\"\r\n                    width={182}\r\n                    height={182}\r\n                  />\r\n                  <p className='text-[#4d4d4d] font-regular text-[15px] mr-8 my-4'>No To-Do's</p>\r\n                  <button\r\n                    className=\"flex items-center px-6 py-2 bg-[#5D56BD] mr-6 text-white text-[13.5px] rounded-lg\"\r\n                    onClick={() => setIsCreateModalOpen(true)}\r\n                  >\r\n                    Create your first To-Do List\r\n                  </button>\r\n                </div>}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>}\r\n\r\n    </>\r\n  );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1575, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}